Tp<-data.frame()
for(k in c(10000,50000)){
for(corrida in 1:2) {
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- cbind(Tnp, tiempo, k, corrida)
}
for(corrida in 1:2) {
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind(Tp,  tiempo, k, corrida)
}
Tiempos<-  rbind(Tnp, Tp)
}
#variark<- cbind(Tiempos, k, c)
colnames (Tiempos)= c("No paralelizado","Paralelizado","k", "corrida")
View(Tnp)
gc()
rm(list = ls())
Tiempos<-data.frame()
Tnp<-numeric()
#variark<-data.frame()
Tp<-numeric()
for(k in c(10000,50000)){
for(corrida in 1:2) {
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- cbind(Tnp, tiempo, k, corrida)
}
for(corrida in 1:2) {
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind(Tp,  tiempo, k, corrida)
}
Tiempos<-  rbind(Tnp, Tp)
}
#variark<- cbind(Tiempos, k, c)
colnames (Tiempos)= c("No paralelizado","Paralelizado","k", "corrida")
View(Tiempos)
View(Tp)
gc()
rm(list = ls())
Tiempos<-data.frame()
Tnp<-numeric()
#variark<-data.frame()
Tp<-numeric()
for(k in c(10000,50000)){
for(corrida in 1:2) {
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- rbind(Tnp, tiempo, k, corrida)
}
for(corrida in 1:2) {
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- rbind(Tp,  tiempo, k, corrida)
}
Tiempos<-  cbind(Tnp, Tp)
}
#variark<- cbind(Tiempos, k, c)
colnames (Tiempos)= c("No paralelizado","Paralelizado","k", "corrida")
View(Tiempos)
gc()
rm(list = ls())
Tiempos<-data.frame()
#Tnp<-numeric()
#variark<-data.frame()
Tp<-numeric()
for(k in c(10000,50000)){
for(corrida in 1:2) {
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
#Tnp <- rbind(Tnp, tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- rbind(tiemponopar,  tiempopar, k, corrida)
}
Tiempos<-  cbind(Tiempos, Tp)
}
#variark<- cbind(Tiempos, k, c)
colnames (Tiempos)= c("No paralelizado","Paralelizado","k", "corrida")
gc()
rm(list = ls())
Tiempos<-data.frame()
#Tnp<-numeric()
#variark<-data.frame()
Tp<-numeric()
for(k in c(10000,50000)){
for(corrida in 1:2) {
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
#Tnp <- rbind(Tnp, tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- rbind(tiemponopar,  tiempopar, k, corrida)
}
Tiempos<-  cbind(Tiempos, Tp)
}
#variark<- cbind(Tiempos, k, c)
colnames (Tiempos)= c("No paralelizado","Paralelizado","k", "corrida")
gc()
rm(list = ls())
Tiempos<-data.frame()
#Tnp<-numeric()
#variark<-data.frame()
Tp<-numeric()
for(corrida in 1:2) {
for(k in c(10000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
#Tnp <- rbind(Tnp, tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- rbind(tiemponopar,  tiempopar, k, corrida)
}
Tiempos<-  cbind(Tiempos, Tp)
}
#variark<- cbind(Tiempos, k, c)
colnames (Tiempos)= c("No paralelizado","Paralelizado","k", "corrida")
View(Tp)
gc()
rm(list = ls())
Tiempos<-data.frame()
#Tnp<-numeric()
#variark<-data.frame()
Tp<-numeric()
for(corrida in 1:2) {
for(k in c(10000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
#Tnp <- rbind(Tnp, tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind(tiemponopar,  tiempopar, k, corrida)
}
Tiempos<-  rbind(Tiempos, Tp)
}
#variark<- cbind(Tiempos, k, c)
colnames (Tiempos)= c("No paralelizado","Paralelizado","k", "corrida")
View(Tiempos)
View(Tp)
View(Tiempos)
gc()
rm(list = ls())
Tiempos<-data.frame()
#Tnp<-numeric()
#variark<-data.frame()
Tp<-numeric()
for(corrida in 1:2) {
for(k in c(10000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
#Tnp <- rbind(Tnp, tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind(tiemponopar,  tiempopar, k, corrida)
Tiempos<-  rbind(Tiempos, Tp)
}
}
#variark<- cbind(Tiempos, k, c)
colnames (Tiempos)= c("No paralelizado","Paralelizado","k", "corrida")
View(Tiempos)
gc()
rm(list = ls())
Tiempos<-data.frame()
#Tnp<-numeric()
#variark<-data.frame()
Tp<-numeric()
for(corrida in 1:2) {
for(k in c(10000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
#Tnp <- rbind(Tnp, tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind("np","par",tiempo, k, corrida)
Tiempos<-  rbind(Tiempos, Tp)
}
}
#variark<- cbind(Tiempos, k, c)
colnames (Tiempos)= c("No paralelizado","Paralelizado","k", "corrida")
View(Tiempos)
View(Tiempos)
gc()
rm(list = ls())
Tiempos<-data.frame()
#Tnp<-numeric()
#variark<-data.frame()
Tp<-c()
for(corrida in 1:2) {
for(k in c(10000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
#Tnp <- rbind(Tnp, tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind("np","par",tiempo, k, corrida)
Tiempos<-  rbind(Tiempos, Tp)
}
}
#variark<- cbind(Tiempos, k, c)
colnames (Tiempos)= c("No paralelizado","Paralelizado","k", "corrida")
View(Tiempos)
gc()
rm(list = ls())
Tiempos<-data.frame()
#Tnp<-numeric()
#variark<-data.frame()
Tp<-c()
for(corrida in 1:2) {
for(k in c(10000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
#Tnp <- rbind(Tnp, tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- rbind("np","par",tiempo, k, corrida)
Tiempos<-  cbind(Tiempos, Tp)
}
}
#variark<- cbind(Tiempos, k, c)
colnames (Tiempos)= c("No paralelizado","Paralelizado","k", "corrida")
View(Tp)
gc()
rm(list = ls())
Tiempos<-data.frame()
Tnp<-numeric()
#variark<-data.frame()
Tp<-numeric()
for(corrida in 1:2) {
for(k in c(10000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- rbind("npar", tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind("par",tiempo, k, corrida)
Tiempos<-  cbind(Tnp, Tp)
}
}
#variark<- cbind(Tiempos, k, c)
colnames (Tiempos)= c("No paralelizado","Paralelizado","k", "corrida")
gc()
rm(list=ls())
Tiempos<-data.frame()
Tnp<-numeric()
#variark<-data.frame()
Tp<-numeric()
for(corrida in 1:2) {
for(k in c(10000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- rbind("npar", tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- rbind("par",tiempo, k, corrida)
Tiempos<-  cbind(Tnp, Tp)
}
}
#variark<- cbind(Tiempos, k, c)
colnames (Tiempos)= c("No paralelizado","Paralelizado","k", "corrida")
View(Tiempos)
gc()
rm(list = ls())
Tiempos<-data.frame()
Tnp<-numeric()
#variark<-data.frame()
Tp<-numeric()
for(corrida in 1:2) {
for(k in c(10000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- cbind("npar", tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind("par",tiempo, k, corrida)
Tiempos<-  rbind(Tnp, Tp)
}
}
#variark<- cbind(Tiempos, k, c)
colnames (Tiempos)= c("No paralelizado","Paralelizado","k", "corrida")
View(Tiempos)
gc()
Tiempos<-data.frame()
Tnp<-numeric()
#variark<-data.frame()
Tp<-numeric()
for(corrida in 1:2) {
for(k in c(10000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- cbind("npar", tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind("par",tiempo, k, corrida)
}
Tiempos<-  rbind(Tnp, Tp)
}
View(Tiempos)
gc()
rm(list = ls())
Tiempos<-data.frame()
Tnp<-numeric()
#variark<-data.frame()
Tp<-numeric()
for(corrida in 1:2) {
for(k in c(10000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- cbind("npar", tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind("par",tiempo, k, corrida)
Tiempos<-  rbind(Tiempos,Tnp, Tp)
}
}
View(Tiempos)
gc()
rm(list = ls())
gc()
Tiempos<-data.frame()
Tnp<-numeric()
Tp<-numeric()
for(corrida in 1:2) {
for(k in c(10000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- cbind("npar", tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind("par",tiempo, k, corrida)
Tiempos<-  rbind(Tiempos,Tnp, Tp)
}
}
colnames (Tiempos)= c("Tipo","Tiempo","k", "corrida")
Tiempos$Tipo=as.factor(Tiempos$Tipo)
Tiempos$Tiempo=as.numeric(levels(Tiempos$Tiempo))[Tiempos$Tiempo]
#Tiempos[Tiempos$Tiempo>30,2]<-Tiempos[Tiempos$Tiempo>30,2]/60
Tiempos$k=as.numeric(levels(Tiempos$k))[Tiempos$k]
Tiempos$k<-Tiempos$k/1000
Tiempos$k=as.factor(Tiempos$k)
library(ggplot2)
#png("p8R1_plot.png")
ggplot(data=Tiempos, aes(x="k", y=Tiempo, fill=Tipo)) +
geom_boxplot(color=c("purple", "red"))+
ggtitle("Tiempos comparados variando k")
View(Tiempos)
View(Tiempos)
ggplot(data=Tiempos, aes(x=k, y=Tiempo, fill=Tipo)) +
geom_boxplot(fill=c("purple", "red"))+
ggtitle("Tiempos comparados variando k")
ggplot(data=Tiempos, aes(x=k, y=Tiempo, fill=Tipo)) +
geom_boxplot()+
ggtitle("Tiempos comparados variando k")
Tiempos$Tipo=factor(Tiempos$Tipo,
labels=c("original", "paralelo"))
Tiempos$Tiempo=as.numeric(levels(Tiempos$Tiempo))[Tiempos$Tiempo]
#Tiempos[Tiempos$Tiempo>30,2]<-Tiempos[Tiempos$Tiempo>30,2]/60
Tiempos$k=as.numeric(levels(Tiempos$k))[Tiempos$k]
Tiempos$k<-Tiempos$k/1000
Tiempos$k=as.factor(Tiempos$k)
library(ggplot2)
#png("p8R1_plot.png")
ggplot(data=Tiempos, aes(x=k, y=Tiempo, fill=Tipo)) +
geom_boxplot()+
ggtitle("Tiempos comparados variando k")
#graphics.off()
Tiempos$Tipo=as.factor(Tiempos$Tipo,
labels=c("original", "paralelo"))
Tiempos$Tiempo=as.numeric(levels(Tiempos$Tiempo))[Tiempos$Tiempo]
#Tiempos[Tiempos$Tiempo>30,2]<-Tiempos[Tiempos$Tiempo>30,2]/60
Tiempos$k=as.numeric(levels(Tiempos$k))[Tiempos$k]
Tiempos$k<-Tiempos$k/1000
Tiempos$k=as.factor(Tiempos$k)
library(ggplot2)
#png("p8R1_plot.png")
ggplot(data=Tiempos, aes(x=k, y=Tiempo, fill=Tipo)) +
geom_boxplot()+
ggtitle("Tiempos comparados variando k")
#graphics.off()
View(Tiempos)
rm(list = ls())
gc()
Tiempos<-data.frame()
Tnp<-numeric()
Tp<-numeric()
for(corrida in 1:2) {
for(k in c(10000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- cbind("npar", tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind("par",tiempo, k, corrida)
Tiempos<-  rbind(Tiempos,Tnp, Tp)
}
}
colnames (Tiempos)= c("Tipo","Tiempo","k", "corrida")
Tiempos$Tipo=as.factor(Tiempos$Tipo)
Tiempos$Tiempo=as.numeric(levels(Tiempos$Tiempo))[Tiempos$Tiempo]
#Tiempos[Tiempos$Tiempo>30,2]<-Tiempos[Tiempos$Tiempo>30,2]/60
Tiempos$k=as.numeric(levels(Tiempos$k))[Tiempos$k]
Tiempos$k<-Tiempos$k/1000
Tiempos$k=as.factor(Tiempos$k)
library(ggplot2)
#png("p8R1_plot.png")
ggplot(data=Tiempos, aes(x=k, y=Tiempo, fill=Tipo)) +
geom_boxplot()+
ggtitle("Tiempos comparados variando k")
rm(list = ls())
gc()
Tiempos<-data.frame()
Tnp<-numeric()
Tp<-numeric()
for(corrida in 1:2) {
for(k in seq(100000,200000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- cbind("original", tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind("paralelo",tiempo, k, corrida)
Tiempos<-  rbind(Tiempos,Tnp, Tp)
}
}
rm(list=ls())
gc()
Tiempos<-data.frame()
Tnp<-numeric()
Tp<-numeric()
for(corrida in 1:5) {
for(k in seq(100000,200000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- cbind("original", tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind("paralelo",tiempo, k, corrida)
Tiempos<-  rbind(Tiempos,Tnp, Tp)
}
}
colnames (Tiempos)= c("Tipo","Tiempo","k", "corrida")
Tiempos$Tipo=as.factor(Tiempos$Tipo)
Tiempos$Tiempo=as.numeric(levels(Tiempos$Tiempo))[Tiempos$Tiempo]
#Tiempos[Tiempos$Tiempo>30,2]<-Tiempos[Tiempos$Tiempo>30,2]/60
Tiempos$k=as.numeric(levels(Tiempos$k))[Tiempos$k]
Tiempos$k<-Tiempos$k/1000
Tiempos$k=as.factor(Tiempos$k)
library(ggplot2)
png("p8R1_plot.png")
ggplot(data=Tiempos, aes(x=k, y=Tiempo, fill=Tipo)) +
geom_boxplot()+
ggtitle("Tiempos comparados variando k")
graphics.off()
Tiempos$Tipo=as.factor(Tiempos$Tipo)
Tiempos$Tiempo=as.numeric(levels(Tiempos$Tiempo))[Tiempos$Tiempo]
Tiempos[Tiempos$Tiempo>30,2]<-Tiempos[Tiempos$Tiempo>30,2]/60
Tiempos$k=as.numeric(levels(Tiempos$k))[Tiempos$k]
Tiempos$k<-Tiempos$k/1000
Tiempos$k=as.factor(Tiempos$k)
library(ggplot2)
png("p8R1_plot.png")
ggplot(data=Tiempos, aes(x=k, y=Tiempo, fill=Tipo)) +
geom_boxplot()+
ggtitle("Tiempos comparados variando k")
graphics.off()
View(Tiempos)
rm(list = ls())
gc()
Tiempos<-data.frame()
Tnp<-numeric()
Tp<-numeric()
for(corrida in 1:5) {
for(k in seq(100000,200000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- cbind("original", tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind("paralelo",tiempo, k, corrida)
Tiempos<-  rbind(Tiempos,Tnp, Tp)
}
}
rm(list = ls())
gc()
Tiempos<-data.frame()
Tnp<-numeric()
Tp<-numeric()
for(corrida in 1:5) {
for(k in seq(100000,200000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- cbind("original", tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind("paralelo",tiempo, k, corrida)
Tiempos<-  rbind(Tiempos,Tnp, Tp)
}
}
colnames (Tiempos)= c("Tipo","Tiempo","k", "corrida")
Tiempos$Tipo=as.factor(Tiempos$Tipo)
Tiempos$Tiempo=as.numeric(levels(Tiempos$Tiempo))[Tiempos$Tiempo]
Tiempos[Tiempos$Tiempo>30,2]<-Tiempos[Tiempos$Tiempo>30,2]/60
Tiempos$k=as.numeric(levels(Tiempos$k))[Tiempos$k]
Tiempos$k<-Tiempos$k/1000
Tiempos$k=as.factor(Tiempos$k)
library(ggplot2)
png("p8R1_plot.png")
ggplot(data=Tiempos, aes(x=k, y=Tiempo, fill=Tipo)) +
geom_boxplot()+
scale_y_continuous(name="Tiempo (min)") +
scale_x_discrete(name="Tama\u{00f1}o de c\u{00fa}mulos")+
ggtitle("Tiempos comparados variando k")
graphics.off()
save.image(file="datosR1.RData")
source('~/GitHub/SimulacionComputacional/P8/datosR1.RData', encoding = 'UTF-8')
load("C:/Users/ede_p/OneDrive/Documentos/GitHub/SimulacionComputacional/P8/datosR1.RData")
colnames(Tiempos)<-c("Tipo","Tiempo","k","corrida")
Tiempos$Tiempo<-as.numeric(levels(Tiempos$Tiempo))[Tiempos$Tiempo]
Tiempos[Tiempos$Tiempo>30,4]<-Tiempos[Tiempos$Tiempo>30,4]/60
for (k in seq(100000,200000,50000)){
tstparalelo<-Tiempos[Tiempos$k==k& Tiempos$Tipo=="paralelo",]
tstoriginal<-Tiempos[Tiempos$k==k & Tiempos$Tipo=="original",]
datospara<-tstparalelo$Tiempo
datosorig<-tstoriginal$Tiempo
pval<-t.test(datosorig,datospara)
print(pval)
}
load("C:/Users/ede_p/OneDrive/Documentos/GitHub/SimulacionComputacional/P8/datosR1.RData")
colnames(Tiempos)<-c("Tipo","Tiempo","k","corrida")
Tiempos$Tiempo<-as.numeric(levels(Tiempos$Tiempo))[Tiempos$Tiempo]
Tiempos[Tiempos$Tiempo>30,4]<-Tiempos[Tiempos$Tiempo>30,4]/60
for (k in c(100,150,200)){
tstparalelo<-Tiempos[Tiempos$k==k& Tiempos$Tipo=="paralelo",]
tstoriginal<-Tiempos[Tiempos$k==k & Tiempos$Tipo=="original",]
datospara<-tstparalelo$Tiempo
datosorig<-tstoriginal$Tiempo
pval<-t.test(datosorig,datospara)
print(pval)
}
rm(list = ls())
gc()
Tiempos<-data.frame()
Tnp<-numeric()
Tp<-numeric()
for(corrida in 1:5) {
for(k in seq(100000,200000,50000)){
source('~/GitHub/SimulacionComputacional/P8/codigobase.R', encoding = 'UTF-8')
Tnp <- cbind("original", tiempo, k, corrida)
source('~/GitHub/SimulacionComputacional/P8/prueba2paralelo.R', encoding = 'UTF-8')
Tp <- cbind("paralelo",tiempo, k, corrida)
Tiempos<-  rbind(Tiempos,Tnp, Tp)
}
}
rm(list = ls())
gc()
