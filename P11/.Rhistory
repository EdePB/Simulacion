xl <- paste("Primer objetivo (", cual[minim[1] + 1], ")", sep="")
yl <- paste("Segundo objetivo (", cual[minim[2] + 1], ")", sep="")
#png("p11_init.png")
plot(val[,1], val[,2], xlab=xl, ylab=yl, main="Ejemplo bidimensional")
#graphics.off()
#png("p11_mejores.png")
plot(val[,1], val[,2], xlab=paste(xl, "mejor con cuadro azul"),
ylab=paste(yl,"mejor con bolita naranja"),
main="Ejemplo bidimensional")
points(val[mejor1, 1], val[mejor1, 2], col="blue", pch=15, cex=1.5)
points(val[mejor2, 1], val[mejor2, 2], col="orange", pch=16, cex=1.5)
graphics.off()
no.dom <- logical()
dominadores <- integer()
for (i in 1:n) {
d <- logical()
for (j in 1:n) {
d <- c(d, domin.by(sign * val[i,], sign * val[j,], k))
}
cuantos <- sum(d)
dominadores <- c(dominadores, cuantos)
no.dom <- c(no.dom, cuantos == 0) # nadie le domina
}
frente <- subset(val, no.dom) # solamente las no dominadas
#png("p11_frente.png")
plot(val[,1], val[,2], xlab=paste(xl, "mejor con cuadro azul"),
ylab=paste(yl,"mejor con bolita naranja"),
main="Ejemplo bidimensional")
points(frente[,1], frente[,2], col="green", pch=16, cex=1.5)
#graphics.off()
library(ggplot2) # recordar instalar si hace falta
data <- data.frame(pos=rep(0, n), dom=dominadores)
#png("p11_violin.png")
gr <- ggplot(data, aes(x=pos, y=dom)) + geom_violin(fill="orange", color="red")
gr + geom_boxplot(width=0.2, fill="blue", color="white", lwd=2) +
xlab("") +
ylab("Frecuencia") +
ggtitle("Cantidad de soluciones dominantes")
#graphics.off()
pick.one <- function(x) {
if (length(x) == 1) {
return(x)
} else {
return(sample(x, 1))
}
}
poli <- function(maxdeg, varcount, termcount) {
f <- data.frame(variable=integer(), coef=integer(), degree=integer())
for (t in 1:termcount) {
var <- pick.one(1:varcount)
deg <- pick.one(1:maxdeg)
f <-  rbind(f, c(var, runif(1), deg))
}
names(f) <- c("variable", "coef", "degree")
return(f)
}
eval <- function(pol, vars, terms) {
value <- 0.0
for (t in 1:terms) {
term <- pol[t,]
value <-  value + term$coef * vars[term$variable]^term$degree
}
return(value)
}
domin.by <- function(target, challenger, total) {
if (sum(challenger < target) > 0) {
return(FALSE) # hay empeora
} # si no hay empeora, vemos si hay mejora
return(sum(challenger > target) > 0)
}
vc <- 4
md <- 3
tc <- 5
k <- 2 # cuantas funciones objetivo
obj <- list()
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
#######################
#for (i in 1:k)
p1<-function (i){
obj[[i]] <- poli(md,vc, tc)
}
p<- foreach(i = 1:tam, .combine=c) %dopar% p1(i)
stopImplicitCluster()
#######################
minim <- (runif(k) > 0.5)
sign <- (1 + -2 * minim)
n <- 200 # cuantas soluciones aleatorias
sol <- matrix(runif(vc * n), nrow=n, ncol=vc)
val <- matrix(rep(NA, k * n), nrow=n, ncol=k)
for (i in 1:n) { # evaluamos las soluciones
for (j in 1:k) { # para todos los objetivos
val[i, j] <- eval(obj[[j]], sol[i,], tc)
}
}
mejor1 <- which.max(sign[1] * val[,1])
mejor2 <- which.max(sign[2] * val[,2])
cual <- c("max", "min")
xl <- paste("Primer objetivo (", cual[minim[1] + 1], ")", sep="")
yl <- paste("Segundo objetivo (", cual[minim[2] + 1], ")", sep="")
#png("p11_init.png")
plot(val[,1], val[,2], xlab=xl, ylab=yl, main="Ejemplo bidimensional")
#graphics.off()
#png("p11_mejores.png")
plot(val[,1], val[,2], xlab=paste(xl, "mejor con cuadro azul"),
ylab=paste(yl,"mejor con bolita naranja"),
main="Ejemplo bidimensional")
points(val[mejor1, 1], val[mejor1, 2], col="blue", pch=15, cex=1.5)
points(val[mejor2, 1], val[mejor2, 2], col="orange", pch=16, cex=1.5)
graphics.off()
no.dom <- logical()
dominadores <- integer()
###################
for (i in 1:n) {
d <- logical()
for (j in 1:n) {
d <- c(d, domin.by(sign * val[i,], sign * val[j,], k))
}
cuantos <- sum(d)
dominadores <- c(dominadores, cuantos)
no.dom <- c(no.dom, cuantos == 0) # nadie le domina
}
#################
frente <- subset(val, no.dom) # solamente las no dominadas
#png("p11_frente.png")
plot(val[,1], val[,2], xlab=paste(xl, "mejor con cuadro azul"),
ylab=paste(yl,"mejor con bolita naranja"),
main="Ejemplo bidimensional")
points(frente[,1], frente[,2], col="green", pch=16, cex=1.5)
#graphics.off()
library(ggplot2) # recordar instalar si hace falta
data <- data.frame(pos=rep(0, n), dom=dominadores)
#png("p11_violin.png")
gr <- ggplot(data, aes(x=pos, y=dom)) + geom_violin(fill="orange", color="red")
gr + geom_boxplot(width=0.2, fill="blue", color="white", lwd=2) +
xlab("") +
ylab("Frecuencia") +
ggtitle("Cantidad de soluciones dominantes")
#graphics.off()
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
Datos<-data.frame()
Tp<-numeric()
for(corrida in 1:10) {
for(k in seq(2, 10, 2)){
for(n in c(200)){
source('~/GitHub/SimulacionComputacional/P11/paraleloP11.R', encoding = 'UTF-8')
Tp <- cbind(dim(frente)[1], k, n)
Datos<-  rbind(Datos, Tp)
}
}
}
stopImplicitCluster()
colnames (Datos)= c("Dominantes","Objetivos", "Soluciones")
Datos$Objetivos=as.factor(Datos$Objetivos)
library(ggplot2)
#png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="antiquewhite2", color="black")+
geom_boxplot(width=0.2, fill="cadetblue1", color="navy")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
#graphics.off()
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="gray90", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="navy")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
Datos<-data.frame()
Tp<-numeric()
for(corrida in 1:50) {
for(k in seq(2, 10, 2)){
for(n in c(200)){
source('~/GitHub/SimulacionComputacional/P11/paraleloP11.R', encoding = 'UTF-8')
Tp <- cbind(dim(frente)[1], k, n)
Datos<-  rbind(Datos, Tp)
}
}
}
stopImplicitCluster()
colnames (Datos)= c("Dominantes","Objetivos", "Soluciones")
Datos$Objetivos=as.factor(Datos$Objetivos)
library(ggplot2)
#png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="gray90", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="navy")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
#graphics.off()
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="white", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="navy")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
#png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="navy")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
Datos<-data.frame()
Tp<-numeric()
for(corrida in 1:50) {
for(k in seq(2, 10, 2)){
for(n in c(200)){
source('~/GitHub/SimulacionComputacional/P11/paraleloP11.R', encoding = 'UTF-8')
Tp <- cbind(dim(frente)[1], k, n)
Datos<-  rbind(Datos, Tp)
}
}
}
stopImplicitCluster()
colnames (Datos)= c("Dominantes","Objetivos", "Soluciones")
Datos$Objetivos=as.factor(Datos$Objetivos)
library(ggplot2)
#png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="navy")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
#graphics.off()
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkslategray1")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="lightblue3")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
#graphics.off()
#png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
Datos<-data.frame()
Tp<-numeric()
for(corrida in 1:50) {
for(k in seq(2, 10, 2)){
for(n in c(200)){
source('~/GitHub/SimulacionComputacional/P11/paraleloP11.R', encoding = 'UTF-8')
Tp <- cbind(dim(frente)[1], k, n)
Datos<-  rbind(Datos, Tp)
}
}
}
stopImplicitCluster()
colnames (Datos)= c("Dominantes","Objetivos", "Soluciones")
Datos$Objetivos=as.factor(Datos$Objetivos)
library(ggplot2)
#png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
#graphics.off()
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
Datos<-data.frame()
Tp<-numeric()
for(corrida in 1:50) {
for(k in seq(2, 16, 2)){
for(n in c(200)){
source('~/GitHub/SimulacionComputacional/P11/paraleloP11.R', encoding = 'UTF-8')
Tp <- cbind(dim(frente)[1], k, n)
Datos<-  rbind(Datos, Tp)
}
}
}
stopImplicitCluster()
colnames (Datos)= c("Dominantes","Objetivos", "Soluciones")
Datos$Objetivos=as.factor(Datos$Objetivos)
library(ggplot2)
#png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
#graphics.off()
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
Datos<-data.frame()
Tp<-numeric()
for(corrida in 1:50) {
for(k in seq(2, 16, 2)){
for(n in c(200)){
source('~/GitHub/SimulacionComputacional/P11/paraleloP11.R', encoding = 'UTF-8')
Tp <- cbind(dim(frente)[1], k, n)
Datos<-  rbind(Datos, Tp)
}
}
}
stopImplicitCluster()
colnames (Datos)= c("Dominantes","Objetivos", "Soluciones")
Datos$Objetivos=as.factor(Datos$Objetivos)
library(ggplot2)
#png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
#graphics.off()
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
Datos<-data.frame()
Tp<-numeric()
for(corrida in 1:50) {
for(k in seq(2, 16, 2)){
for(n in c(200)){
source('~/GitHub/SimulacionComputacional/P11/paraleloP11.R', encoding = 'UTF-8')
Tp <- cbind(dim(frente)[1], k, n)
Datos<-  rbind(Datos, Tp)
}
}
}
stopImplicitCluster()
colnames (Datos)= c("Dominantes","Objetivos", "Soluciones")
Datos$Objetivos=as.factor(Datos$Objetivos)
library(ggplot2)
#png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
#graphics.off()
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
#png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="navy")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
Datos<-data.frame()
Tp<-numeric()
for(corrida in 1:50) {
for(k in seq(2, 16, 2)){
for(n in c(200)){
source('~/GitHub/SimulacionComputacional/P11/paraleloP11.R', encoding = 'UTF-8')
Tp <- cbind(dim(frente)[1], k, n)
Datos<-  rbind(Datos, Tp)
}
}
}
stopImplicitCluster()
colnames (Datos)= c("Dominantes","Objetivos", "Soluciones")
Datos$Objetivos=as.factor(Datos$Objetivos)
library(ggplot2)
#png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
#graphics.off()
library(ggplot2)
png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
graphics.off()
png("p11T_violinplot2.png",width = 100, height = 50)
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
graphics.off()
setwd("~/GitHub/SimulacionComputacional/P11")
png("p11T_violinplot2.png",width = 1000, height = 500)
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
graphics.off()
png("p11T_violinplot3.png",width = 5000, height = 1000)
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
graphics.off()
png("p11T_violinplot3.png",width = 2000, height = 1000)
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
graphics.off()
png("p11T_violinplot3.png",width = 500, height = 250)
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
graphics.off()
png("p11T_violinplot3.png",width = 700, height = 350)
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
graphics.off()
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("p11T_violinplot4.png",width = 700, height = 350)
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("p11T_violinplot4.png",width = 70, height = 35)
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("p11T_violinplot4.png",width = 50, height = 25)
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="darkolivegreen1", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue3", color="darkblue")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("p11T_violinplot4.png",width = 10, height = 5)
