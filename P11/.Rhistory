stopImplicitCluster()
#################
frente <- subset(val, no.dom) # solamente las no dominadas
dimfrente<-dim(frente)[1]
val<-as.data.frame(val)
frente<-as.data.frame(frente)
library(ggplot2)
#png("p11_frente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = frente, aes(x=frente[,1],y=frente[,2]), color="blue")+
ggtitle("Frente")
#graphics.off()
if(dimfrente>2){
ordenf<-frente[order(frente[,1]),]
dis<-c()
for(i in 1:dimfrente-1){
d<- sqrt((ordenf[i,1]-ordenf[i+1,1])**2+(ordenf[i,2]-ordenf[i+1,2])**2)
dis<-c(dis,d)
}
umbral<-mean(dis)
nuevo<-rep(FALSE,dimfrente)
for(i in 1:dimfrente){
if (ordenf[i,]==head(ordenf,n=1)||ordenf[i,]==tail(ordenf,n=1)){
nuevo[i]=TRUE
}else{
j<-max(which(nuevo))
d<-sqrt((ordenf[i,1]-ordenf[j,1])**2+(ordenf[i,2]-ordenf[j,2])**2)
if(d>=umbral){
nuevo[i]=TRUE
}else{nuevo[i]=FALSE
}
}
}
mejor<-subset(ordenf,nuevo)
#png("p11_frente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = frente, aes(x=frente[,1],y=frente[,2]), color="blue")+
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="yellow")+
ggtitle("Diversificación de frente")
#graphics.off()
#png("p11_frente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="yellow")+
ggtitle("Nuevo frente")
#graphics.off()
}
png("p11_frente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = frente, aes(x=frente[,1],y=frente[,2]), color="blue")+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Frente")
graphics.off()
png("p11_frente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = frente, aes(x=frente[,1],y=frente[,2]), color="blue")+
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red")+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Diversificación de frente")
graphics.off()
png("p11_frente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = frente, aes(x=frente[,1],y=frente[,2]), color="blue")+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Frente")
graphics.off()
png("p11_frente_mod.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = frente, aes(x=frente[,1],y=frente[,2]), color="blue")+
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red")+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Diversificación de frente")
graphics.off()
png("p11_nuevofrente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="yellow")+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")
graphics.off()
png("p11_frente_mod.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = frente, aes(x=frente[,1],y=frente[,2]), color="blue", size=2)+
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=2)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Diversificación de frente")
graphics.off()
timei<-Sys.time()
png("p11_nuevofrente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=2)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")
graphics.off()
png("p11_frente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = frente, aes(x=frente[,1],y=frente[,2]), color="blue", size=2)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Frente")
graphics.off()
setwd("~/GitHub/SimulacionComputacional/P11")
png("p11_frente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = frente, aes(x=frente[,1],y=frente[,2]), color="blue", size=2)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
graphics.off()
png("p11_frente_mod.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = frente, aes(x=frente[,1],y=frente[,2]), color="blue", size=2)+
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=2)+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))+
ggtitle("Diversificación de frente")
graphics.off()
png("p11_nuevofrente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=2)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
graphics.off()
png("p11_frente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = frente, aes(x=frente[,1],y=frente[,2]), color="blue", size=2)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
graphics.off()
png("p11_frente_mod.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = frente, aes(x=frente[,1],y=frente[,2]), color="blue", size=2)+
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=2)+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))+
ggtitle("Diversificación de frente")
graphics.off()
png("p11_nuevofrente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=2)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
graphics.off()
graphics.off()
png("p11_nuevofrente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=2)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
graphics.off()
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]))+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=2)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
ggsave("p11_nuevofrente.png")
png("p11_frente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]),size=2)+
xlab(xl) +
ylab(yl) +
geom_point(data = frente, aes(x=frente[,1],y=frente[,2]), color="blue", size=4)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=16),
plot.title = element_text(size=18,face="bold"))
graphics.off()
mejor<-subset(ordenf,nuevo)
png("p11_frente_mod.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]),size=2)+
xlab(xl) +
ylab(yl) +
geom_point(data = frente, aes(x=frente[,1],y=frente[,2]), color="blue", size=4)+
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=4)+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=16),
plot.title = element_text(size=18,face="bold"))+
ggtitle("Diversificación de frente")
graphics.off()
png("p11_nuevofrente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]),size=2)+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=4)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
ggsave("p11_nuevofrente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]),size=2)+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=4)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
ggsave("p11_nuevofrente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]),size=2)+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=4)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
ggsave("p11_nuevofrente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]),size=2)+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=4)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
ggsave("p11_nuevofrente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]),size=2)+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=4)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
ggsave("p11_nuevofrente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]),size=2)+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=4)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
ggsave("p11_nuevofrente.png",width = 50, height = 100)
png("p11_nuevofrente.png")
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]),size=2)+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=4)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
ggsave("p11_nuevofrente.png",width = 5, height = 10)
}
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]),size=2)+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=4)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
ggsave("p11_nuevofrente.png",width = 5, height = 10)
}
gplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]),size=2)+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=4)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
ggsave("p11_nuevofrente.png",width = 5, height = 10)
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]),size=2)+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=4)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
ggsave("p11_nuevofrente.png",width = 5, height = 10)
ggplot()+
geom_point(data = val, aes(x=val[,1], y=val[,2]),size=2)+
xlab(xl) +
ylab(yl) +
geom_point(data = mejor, aes(x=mejor[,1],y=mejor[,2]), color="red", size=4)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Nuevo frente")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
plot.title = element_text(size=14,face="bold"))
ggsave("p11_nuevofrente.png",width = 10, height = 5)
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
Datos<-data.frame()
Tp<-numeric()
for(corrida in 1:50) {
for(k in seq(2, 10, 2)){
for(n in c(200)){
source('~/GitHub/SimulacionComputacional/P11/paraleloP11.R', encoding = 'UTF-8')
Tp <- cbind(dim(frente)[1], k, n)
Datos<-  rbind(Datos, Tp)
}
}
}
stopImplicitCluster()
colnames (Datos)= c("Dominantes","Objetivos", "Soluciones")
Datos$Objetivos=as.factor(Datos$Objetivos)
library(ggplot2)
#png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill=NULL, color="black")+
geom_boxplot(width=0.2, fill="yellow", color="navy")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
#graphics.off()
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
Datos<-data.frame()
Tp<-numeric()
for(corrida in 1:50) {
for(k in seq(2, 10, 2)){
for(n in c(200)){
source('~/GitHub/SimulacionComputacional/P11/paraleloP11.R', encoding = 'UTF-8')
Tp <- cbind(dim(frente)[1], k, n)
Datos<-  rbind(Datos, Tp)
}
}
}
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
Datos<-data.frame()
Tp<-numeric()
for(corrida in 1:10) {
for(k in seq(2, 10, 2)){
for(n in c(200)){
source('~/GitHub/SimulacionComputacional/P11/paraleloP11.R', encoding = 'UTF-8')
Tp <- cbind(dim(frente)[1], k, n)
Datos<-  rbind(Datos, Tp)
}
}
}
stopImplicitCluster()
colnames (Datos)= c("Dominantes","Objetivos", "Soluciones")
Datos$Objetivos=as.factor(Datos$Objetivos)
library(ggplot2)
#png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="antiquewhite2", color="black")+
geom_boxplot(width=0.2, fill="cadetblue1", color="navy")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
#graphics.off()
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="antiquewhite2", color="black")+
geom_boxplot(width=0.2, fill="cadetblue1", color="navy")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
#graphics.off()
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="antiquewhite2", color="black")+
geom_boxplot(width=0.2, fill="cadetblue1", color="navy")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="antiquewhite2", color="black")+
geom_boxplot(width=0.2, fill="cadetblue1", color="navy")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="antiquewhite2", color="black")+
geom_boxplot(width=0.2, fill="cadetblue1", color="navy")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
rm(list = ls())
gc()
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
Datos<-data.frame()
Tp<-numeric()
for(corrida in 1:10) {
for(k in seq(2, 10, 2)){
for(n in c(200)){
source('~/GitHub/SimulacionComputacional/P11/paraleloP11.R', encoding = 'UTF-8')
Tp <- cbind(dim(frente)[1], k, n)
Datos<-  rbind(Datos, Tp)
}
}
}
stopImplicitCluster()
colnames (Datos)= c("Dominantes","Objetivos", "Soluciones")
Datos$Objetivos=as.factor(Datos$Objetivos)
library(ggplot2)
#png("p11T_violinplot.png")
ggplot(data=Datos, aes(x=Objetivos, y=(Dominantes/n)*100)) +
geom_violin(scale="width",fill="antiquewhite2", color="black")+
geom_boxplot(width=0.2, fill="cadetblue1", color="navy")+
xlab("Funciones objetivo") +
ylab("Porcentaje de soluciones dominantes")+
ggtitle("Cantidad de soluciones dominantes")+
theme(plot.title = element_text(hjust = 0.5))
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
Datos<-data.frame()
Tp<-numeric()
for(corrida in 1:10) {
for(k in seq(2, 10, 2)){
for(n in c(200)){
source('~/GitHub/SimulacionComputacional/P11/paraleloP11.R', encoding = 'UTF-8')
Tp <- cbind(dim(frente)[1], k, n)
Datos<-  rbind(Datos, Tp)
}
}
}
