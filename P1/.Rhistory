if (runif(1) < 0.5) {
cambio <- -1
}
pos[cambiar] <- pos[cambiar] + cambio
}
if (all(pos==origen)) {
contador=contador +1
}
return(contador)
})
timef<-Sys.time()
tiempo<-(timef-timei)
print(tiempo)
Tnp <- cbind(replica, duracion, repetir, dimension,tiempo)
res<-cbind(replica, duracion, repetir,dimension, sum(resultado))
datos <- rbind(datos, res)
Tiempos<-  rbind(Tiempos,Tnp)
}
}
stopCluster(cluster)
colnames(Tiempos)<-c("Replica", "Pasos","Repeticiones","Dimension","Tiempo")
datos$Repeticiones<-as.factor(datos$Repeticiones)
datos$Dimension<-as.factor(datos$Dimension)
datos$Pasos<-as.factor(datos$Pasos)
colnames(Tiempos)<-c("Replica", "Pasos","Repeticiones","Dimension","Tiempo")
Tiempos$Repeticiones<-as.factor(Tiempos$Repeticiones)
Tiempos$Dimension<-as.factor(Tiempos$Dimension)
Tiempos$Pasos<-as.factor(Tiempos$Pasos)
library(ggplot2)
ggplot(data=datos, aes(x = Dimension, y= Tiempo, color=Pasos)) +
geom_boxplot(position = position_dodge(1))+
ylab("Tiempos comparados")+
ggsave("P1R1_plot.png")
Tiempos
library(ggplot2)
ggplot(data=Tiempos, aes(x = Dimension, y= Tiempo, color=Pasos)) +
geom_boxplot(position = position_dodge(1))+
ylab("Tiempos comparados")+
ggsave("P1R1_plot.png")
library(ggplot2)
ggplot(data=Tiempos, aes(x = Dimension, y= Tiempo, color=Pasos)) +
geom_boxplot(position = position_dodge(1))+
ylab("Tiempos comparados")+
ggsave("P1R1_plot.png")
repetir <- 100
duracion <- seq(200,600,200)
Tiempos<-data.frame()
Tnp<-data.frame()
library(parallel)
cluster <- makeCluster(detectCores() - 1)
clusterExport(cluster, "duracion")
clusterExport(cluster, "repetir")
datos <-  data.frame()
for(replica in 1:5){
for (dimension in 1:8) {
clusterExport(cluster, "dimension")
timei<-Sys.time()
resultado <- parSapply(cluster, 1:repetir,
function(r) {
pos <- rep(0, dimension)
origen=rep(0,dimension)
contador=0
for (t in 1:duracion) {
cambiar <- sample(1:dimension, 1)
cambio <- 1
if (runif(1) < 0.5) {
cambio <- -1
}
pos[cambiar] <- pos[cambiar] + cambio
}
if (all(pos==origen)) {
contador=contador +1
}
return(contador)
})
timef<-Sys.time()
tiempo<-(timef-timei)
print(tiempo)
Tnp <- cbind(replica, duracion, repetir, dimension,tiempo)
res<-cbind(replica, duracion, repetir,dimension, sum(resultado))
datos <- rbind(datos, res)
Tiempos<-  rbind(Tiempos,Tnp)
}
}
stopCluster(cluster)
colnames(Tiempos)<-c("Replica", "Pasos","Repeticiones","Dimension","Tiempo")
Tiempos$Repeticiones<-as.factor(Tiempos$Repeticiones)
Tiempos$Dimension<-as.factor(Tiempos$Dimension)
Tiempos$Pasos<-as.factor(Tiempos$Pasos)
library(ggplot2)
ggplot(data=Tiempos, aes(x = Dimension, y= Tiempo, color=Pasos)) +
geom_boxplot(position = position_dodge(1))+
ylab("Tiempos comparados")+
ggsave("P1R1_plot.png")
repetir <- 100
duracion <- seq(200,600,200)
Tiempos<-data.frame()
Tnp<-data.frame()
library(parallel)
cluster <- makeCluster(detectCores() - 1)
clusterExport(cluster, "duracion")
clusterExport(cluster, "repetir")
datos <-  data.frame()
for(replica in 1:5){
for (dimension in 1:8) {
clusterExport(cluster, "dimension")
timei<-Sys.time()
resultado <- parSapply(cluster, 1:repetir,
function(r) {
pos <- rep(0, dimension)
origen=rep(0,dimension)
contador=0
for (t in 1:duracion) {
cambiar <- sample(1:dimension, 1)
cambio <- 1
if (runif(1) < 0.5) {
cambio <- -1
}
pos[cambiar] <- pos[cambiar] + cambio
}
if (all(pos==origen)) {
contador=contador +1
}
return(contador)
})
timef<-Sys.time()
tiempo<-(timef-timei)
print(tiempo)
Tnp <- cbind(replica, duracion, repetir, dimension,tiempo)
res<-cbind(replica, duracion, repetir,dimension, sum(resultado))
datos <- rbind(datos, res)
Tiempos<-  rbind(Tiempos,Tnp)
}
}
stopCluster(cluster)
colnames(Tiempos)<-c("Replica", "Pasos","Repeticiones","Dimension","Tiempo")
Tiempos$Repeticiones<-as.factor(Tiempos$Repeticiones)
Tiempos$Dimension<-as.factor(Tiempos$Dimension)
Tiempos$Pasos<-as.factor(Tiempos$Pasos)
library(ggplot2)
ggplot(data=Tiempos, aes(x = Dimension, y= Tiempo, color=Pasos)) +
geom_boxplot(position = position_dodge(1))+
ylab("Tiempos comparados")+
ggsave("P1R1_plot.png")
colnames(Tiempos)<-c("Replica", "Pasos","Repeticiones","Dimension","Tiempo")
Tiempos$Repeticiones<-as.factor(Tiempos$Repeticiones)
Tiempos$Dimension<-as.factor(Tiempos$Dimension)
Tiempos$Pasos<-as.factor(Tiempos$Pasos)
Tiempos$Tiempo<-as.factor(Tiempos$Tiempo)
library(ggplot2)
ggplot(data=Tiempos, aes(x = Dimension, y= Tiempo, color=Pasos)) +
geom_boxplot(position = position_dodge(1))+
ylab("Tiempos comparados")+
ggsave("P1R1_plot.png")
repetir <- 100
duracion <- seq(200,600,200)
Tiempos<-data.frame()
Tnp<-data.frame()
library(parallel)
cluster <- makeCluster(detectCores() - 1)
clusterExport(cluster, "duracion")
clusterExport(cluster, "repetir")
datos <-  data.frame()
for(replica in 1:5){
for (dimension in 1:8) {
clusterExport(cluster, "dimension")
timei<-Sys.time()
resultado <- parSapply(cluster, 1:repetir,
function(r) {
pos <- rep(0, dimension)
origen=rep(0,dimension)
contador=0
for (t in 1:duracion) {
cambiar <- sample(1:dimension, 1)
cambio <- 1
if (runif(1) < 0.5) {
cambio <- -1
}
pos[cambiar] <- pos[cambiar] + cambio
}
if (all(pos==origen)) {
contador=contador +1
}
return(contador)
})
timef<-Sys.time()
tiempo<-(timef-timei)
print(tiempo)
Tnp <- cbind(replica, duracion, repetir, dimension,tiempo)
res<-cbind(replica, duracion, repetir,dimension, sum(resultado))
datos <- rbind(datos, res)
Tiempos<-  rbind(Tiempos,Tnp)
}
}
stopCluster(cluster)
colnames(Tiempos)<-c("Replica", "Pasos","Repeticiones","Dimension","Tiempo")
Tiempos$Repeticiones<-as.factor(Tiempos$Repeticiones)
#Tiempos$Dimension<-as.factor(Tiempos$Dimension)
Tiempos$Pasos<-as.factor(Tiempos$Pasos)
Tiempos$Tiempo<-as.factor(Tiempos$Tiempo)
library(ggplot2)
ggplot(data=Tiempos, aes(x = Dimension, y= Tiempo, color=Pasos)) +
geom_boxplot(position = position_dodge(1))+
ylab("Tiempos comparados")+
ggsave("P1R1_plot.png")
repetir <- 100
duracion <- seq(200,600,200)
Tiempos<-data.frame()
Tnp<-data.frame()
library(parallel)
cluster <- makeCluster(detectCores() - 1)
clusterExport(cluster, "duracion")
clusterExport(cluster, "repetir")
datos <-  data.frame()
for(replica in 1:5){
for (dimension in 1:8) {
clusterExport(cluster, "dimension")
timei<-Sys.time()
resultado <- parSapply(cluster, 1:repetir,
function(r) {
pos <- rep(0, dimension)
origen=rep(0,dimension)
contador=0
for (t in 1:duracion) {
cambiar <- sample(1:dimension, 1)
cambio <- 1
if (runif(1) < 0.5) {
cambio <- -1
}
pos[cambiar] <- pos[cambiar] + cambio
}
if (all(pos==origen)) {
contador=contador +1
}
return(contador)
})
timef<-Sys.time()
tiempo<-(timef-timei)
print(tiempo)
Tnp <- cbind(replica, duracion, repetir, dimension,tiempo)
res<-cbind(replica, duracion, repetir,dimension, sum(resultado))
datos <- rbind(datos, res)
Tiempos<-  rbind(Tiempos,Tnp)
}
}
stopCluster(cluster)
colnames(Tiempos)<-c("Replica", "Pasos","Repeticiones","Dimension","Tiempo")
Tiempos$Repeticiones<-as.factor(Tiempos$Repeticiones)
#Tiempos$Dimension<-as.factor(Tiempos$Dimension)
Tiempos$Pasos<-as.factor(Tiempos$Pasos)
#Tiempos$Tiempo<-as.factor(Tiempos$Tiempo)
library(ggplot2)
ggplot(data=Tiempos, aes(x = Dimension, y= Tiempo, color=Pasos)) +
geom_boxplot(position = position_dodge(1))+
ylab("Tiempos comparados")+
ggsave("P1R1_plot.png")
repetir <- 100
duracion <- seq(200,600,200)
Tiempos<-data.frame()
Tnp<-data.frame()
library(parallel)
cluster <- makeCluster(detectCores() - 1)
clusterExport(cluster, "duracion")
clusterExport(cluster, "repetir")
datos <-  data.frame()
for(replica in 1:5){
for (dimension in 1:8) {
clusterExport(cluster, "dimension")
timei<-Sys.time()
resultado <- parSapply(cluster, 1:repetir,
function(r) {
pos <- rep(0, dimension)
origen=rep(0,dimension)
contador=0
for (t in 1:duracion) {
cambiar <- sample(1:dimension, 1)
cambio <- 1
if (runif(1) < 0.5) {
cambio <- -1
}
pos[cambiar] <- pos[cambiar] + cambio
}
if (all(pos==origen)) {
contador=contador +1
}
return(contador)
})
timef<-Sys.time()
tiempo<-(timef-timei)
print(tiempo)
Tnp <- cbind(replica, duracion, repetir, dimension,tiempo)
res<-cbind(replica, duracion, repetir,dimension, sum(resultado))
datos <- rbind(datos, res)
Tiempos<-  rbind(Tiempos,Tnp)
}
}
stopCluster(cluster)
colnames(Tiempos)<-c("Replica", "Pasos","Repeticiones","Dimension","Tiempo")
#Tiempos$Repeticiones<-as.factor(Tiempos$Repeticiones)
#Tiempos$Dimension<-as.factor(Tiempos$Dimension)
Tiempos$Pasos<-as.factor(Tiempos$Pasos)
#Tiempos$Tiempo<-as.factor(Tiempos$Tiempo)
library(ggplot2)
ggplot(data=Tiempos, aes(x = Dimension, y= Tiempo, color=Pasos)) +
geom_boxplot(position = position_dodge(1))+
ylab("Tiempos comparados")+
ggsave("P1R1_plot.png")
repetir <- 100
duracion <- seq(200,600,200)
Tiempos<-data.frame()
Tnp<-data.frame()
library(parallel)
cluster <- makeCluster(detectCores() - 1)
clusterExport(cluster, "duracion")
clusterExport(cluster, "repetir")
datos <-  data.frame()
for(replica in 1:5){
for (dimension in 1:8) {
clusterExport(cluster, "dimension")
timei<-Sys.time()
resultado <- parSapply(cluster, 1:repetir,
function(r) {
pos <- rep(0, dimension)
origen=rep(0,dimension)
contador=0
for (t in 1:duracion) {
cambiar <- sample(1:dimension, 1)
cambio <- 1
if (runif(1) < 0.5) {
cambio <- -1
}
pos[cambiar] <- pos[cambiar] + cambio
}
if (all(pos==origen)) {
contador=contador +1
}
return(contador)
})
timef<-Sys.time()
tiempo<-(timef-timei)
print(tiempo)
Tnp <- cbind(replica, duracion, repetir, dimension,tiempo)
res<-cbind(replica, duracion, repetir,dimension, sum(resultado))
datos <- rbind(datos, res)
Tiempos<-  rbind(Tiempos,Tnp)
}
}
stopCluster(cluster)
colnames(Tiempos)<-c("Replica", "Pasos","Repeticiones","Dimension","Tiempo")
#Tiempos$Repeticiones<-as.factor(Tiempos$Repeticiones)
#Tiempos$Dimension<-as.factor(Tiempos$Dimension)
Tiempos$Pasos<-as.factor(Tiempos$Pasos)
Tiempos$Tiempo<-as.factor(Tiempos$Tiempo)
library(ggplot2)
ggplot(data=Tiempos, aes(x = Dimension, y= Tiempo, color=Pasos)) +
geom_boxplot(position = position_dodge(1))+
ylab("Tiempos comparados")+
ggsave("P1R1_plot.png")
repetir <- 100
duracion <- seq(200,600,200)
Tiempos<-data.frame()
Tnp<-data.frame()
library(parallel)
cluster <- makeCluster(detectCores() - 1)
clusterExport(cluster, "duracion")
clusterExport(cluster, "repetir")
datos <-  data.frame()
for(replica in 1:5){
for (dimension in 1:8) {
clusterExport(cluster, "dimension")
timei<-Sys.time()
resultado <- parSapply(cluster, 1:repetir,
function(r) {
pos <- rep(0, dimension)
origen=rep(0,dimension)
contador=0
for (t in 1:duracion) {
cambiar <- sample(1:dimension, 1)
cambio <- 1
if (runif(1) < 0.5) {
cambio <- -1
}
pos[cambiar] <- pos[cambiar] + cambio
}
if (all(pos==origen)) {
contador=contador +1
}
return(contador)
})
timef<-Sys.time()
tiempo<-(timef-timei)
print(tiempo)
Tnp <- cbind(replica, duracion, repetir, dimension,tiempo)
res<-cbind(replica, duracion, repetir,dimension, sum(resultado))
datos <- rbind(datos, res)
Tiempos<-  rbind(Tiempos,Tnp)
}
}
stopCluster(cluster)
colnames(Tiempos)<-c("Replica", "Pasos","Repeticiones","Dimension","Tiempo")
#Tiempos$Repeticiones<-as.factor(Tiempos$Repeticiones)
Tiempos$Dimension<-as.factor(Tiempos$Dimension)
Tiempos$Pasos<-as.factor(Tiempos$Pasos)
#Tiempos$Tiempo<-as.factor(Tiempos$Tiempo)
library(ggplot2)
ggplot(data=Tiempos, aes(x = Dimension, y= Tiempo, color=Pasos)) +
geom_boxplot(position = position_dodge(1))+
ylab("Tiempos comparados")+
ggsave("P1R1_plot.png")
Tiempos
repetir <- 100
duracion <- seq(200,600,200)
Tiempos<-data.frame()
Tnp<-data.frame()
library(parallel)
cluster <- makeCluster(detectCores() - 1)
clusterExport(cluster, "duracion")
clusterExport(cluster, "repetir")
datos <-  data.frame()
for(replica in 1:5){
for (dimension in 1:8) {
clusterExport(cluster, "dimension")
timei<-Sys.time()
resultado <- parSapply(cluster, 1:repetir,
function(r) {
pos <- rep(0, dimension)
origen=rep(0,dimension)
contador=0
for (t in 1:duracion) {
cambiar <- sample(1:dimension, 1)
cambio <- 1
if (runif(1) < 0.5) {
cambio <- -1
}
pos[cambiar] <- pos[cambiar] + cambio
}
if (all(pos==origen)) {
contador=contador +1
}
return(contador)
})
timef<-Sys.time()
tiempo<-(timef-timei)
print(tiempo)
Tnp <- cbind(replica, duracion, repetir, dimension,tiempo)
res<-cbind(replica, duracion, repetir,dimension, sum(resultado))
datos <- rbind(datos, res)
}
Tiempos<-  rbind(Tiempos,Tnp)
}
stopCluster(cluster)
colnames(Tiempos)<-c("Replica", "Pasos","Repeticiones","Dimension","Tiempo")
#Tiempos$Repeticiones<-as.factor(Tiempos$Repeticiones)
Tiempos$Dimension<-as.factor(Tiempos$Dimension)
Tiempos$Pasos<-as.factor(Tiempos$Pasos)
#Tiempos$Tiempo<-as.factor(Tiempos$Tiempo)
library(ggplot2)
ggplot(data=Tiempos, aes(x = Dimension, y= Tiempo, color=Pasos)) +
geom_boxplot(position = position_dodge(1))+
ylab("Tiempos comparados")+
ggsave("P1R1_plot.png")
repetir <- 100
duracion <- seq(200,600,200)
Tiempos<-data.frame()
Tnp<-data.frame()
library(parallel)
cluster <- makeCluster(detectCores() - 1)
clusterExport(cluster, "duracion")
clusterExport(cluster, "repetir")
datos <-  data.frame()
for(replica in 1:5){
for (dimension in 1:8) {
clusterExport(cluster, "dimension")
timei<-Sys.time()
resultado <- parSapply(cluster, 1:repetir,
function(r) {
pos <- rep(0, dimension)
origen=rep(0,dimension)
contador=0
for (t in 1:duracion) {
cambiar <- sample(1:dimension, 1)
cambio <- 1
if (runif(1) < 0.5) {
cambio <- -1
}
pos[cambiar] <- pos[cambiar] + cambio
}
if (all(pos==origen)) {
contador=contador +1
}
return(contador)
})
timef<-Sys.time()
tiempo<-(timef-timei)
print(tiempo)
res<-cbind(replica, duracion, repetir,dimension, sum(resultado))
datos <- rbind(datos, res)
}
Tnp <- cbind(replica, duracion, repetir, dimension,tiempo)
Tiempos<-  rbind(Tiempos,Tnp)
}
stopCluster(cluster)
colnames(Tiempos)<-c("Replica", "Pasos","Repeticiones","Dimension","Tiempo")
#Tiempos$Repeticiones<-as.factor(Tiempos$Repeticiones)
Tiempos$Dimension<-as.factor(Tiempos$Dimension)
Tiempos$Pasos<-as.factor(Tiempos$Pasos)
#Tiempos$Tiempo<-as.factor(Tiempos$Tiempo)
library(ggplot2)
ggplot(data=Tiempos, aes(x = Dimension, y= Tiempo, color=Pasos)) +
geom_boxplot(position = position_dodge(1))+
ylab("Tiempos comparados")+
ggsave("P1R1_plot.png")
